{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getHeadline","length","lastEl","firstElements","slice","map","item","join","this","className","type","classNames","removeAll_invisible","onClick","setState","includes","prevState","splice","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,WACZ,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,GAA6B,IAAzBA,EAAcE,OAChB,MAAO,oBAGT,GAA6B,IAAzBF,EAAcE,OAChB,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBAGF,IAAMG,EAASH,EAAcA,EAAcE,OAAS,GAC9CE,EAAgBJ,EAAcK,MAAM,GAAI,GAAGC,KAAI,SAACC,GACpD,OAAOA,KAGT,MAAM,GAAN,OAAUH,EAAcI,KAAK,MAA7B,gBAA0CL,EAA1C,kB,4CAGF,WAAU,IAAD,OACCH,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAKU,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uCACOD,KAAKR,iBAEZ,wBACEU,KAAK,SACLD,UAAWE,IACT,YACA,SACA,CAAEC,oBAA8C,IAAzBb,EAAcE,SAEvCY,QAAS,WACP,EAAKC,SAAS,CACZf,cAAe,MATrB,kBAiBF,oBAAIU,UAAU,aAAd,SACGb,EAAgBS,KAAI,SAAAC,GACnB,OACE,qBAEEG,UAAWE,IACT,mBACA,CAAE,0BAA2BZ,EAAcgB,SAAST,KAJxD,UAOE,sBAAMG,UAAU,mBAAhB,SAAoCH,IACpC,wBACEG,UAAWE,IACT,qBACA,SACA,CAAE,0BAA2BZ,EAAcgB,SAAST,KAEtDI,KAAK,SACLG,QAAS,WAIP,EAAKC,UAAS,SAACE,GACb,OAAIjB,EAAcgB,SAAST,IACzBU,EAAUjB,cAAckB,OACrBlB,EAAcmB,QAAQZ,GAAQ,GAG1BU,GAGF,CACLjB,cAAc,GAAD,mBAAMiB,EAAUjB,eAAhB,CAA+BO,SArBpD,SA2BKP,EAAcgB,SAAST,GAAS,SAAW,UAlC3CA,e,GAtDHa,IAAMC,WAoGTvB,IClHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8bd5d95f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getHeadline = () => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    const lastEl = selectedGoods[selectedGoods.length - 1];\n    const firstElements = selectedGoods.slice(0, -1).map((item) => {\n      return item;\n    });\n\n    return `${firstElements.join(', ')} and ${lastEl} are selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"app-header\">\n          <h1>\n            { `${this.getHeadline()}` }\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames(\n              'removeAll',\n              'button',\n              { removeAll_invisible: selectedGoods.length === 0 },\n            )}\n            onClick={() => {\n              this.setState({\n                selectedGoods: [],\n              });\n            }}\n          >\n            X\n          </button>\n        </div>\n\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(item => {\n            return (\n              <li\n                key={item}\n                className={classNames(\n                  'goods-list__item',\n                  { 'goods-list__item_active': selectedGoods.includes(item) },\n                )}\n              >\n                <span className=\"goods-list__good\">{item}</span>\n                <button\n                  className={classNames(\n                    'goods-list__button',\n                    'button',\n                    { 'goods-list__button_add': !selectedGoods.includes(item) },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    type Prev = {\n                      selectedGoods: []\n                    };\n                    this.setState((prevState: Prev) => {\n                      if (selectedGoods.includes(item)) {\n                        prevState.selectedGoods.splice(\n                          (selectedGoods.indexOf(item)), 1,\n                        );\n\n                        return prevState;\n                      }\n\n                      return {\n                        selectedGoods: [...prevState.selectedGoods, item],\n                      };\n                    });\n                  }}\n                >\n                  {\n                    (selectedGoods.includes(item)) ? 'Remove' : 'Add'\n                  }\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}